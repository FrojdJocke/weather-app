{"version":3,"sources":["context/weatherContext.js","global.js","containers/forecast/ForecastHour.js","containers/forecast/Forecast.js","containers/forecast/ForecastContainer.js","containers/Header.js","containers/Navigation.js","containers/NotFound.js","hooks/useWeather.js","App.js","index.js"],"names":["WeatherContext","createContext","weatherIcon","code","getDateName","date","getDay","toShortTimeString","parts","toLocaleTimeString","split","getDateFromUnixTS","uts","Date","ForecastHour","data","className","dt","getHours","src","weather","icon","alt","description","Math","round","temp","feels_like","parseFloat","rain","toFixed","humidity","Forecast","hours","timestamp","dateParts","toString","useState","showHours","setShowHours","onClick","max","min","ceil","wind_speed","wind_gust","sunrise","sunset","scope","length","map","hour","colSpan","ForecastContainer","showWeek","useContext","history","useHistory","daily","slice","day","hourly","filter","x","getDate","push","Header","setWeather","city","placeholder","onKeyPress","e","charCode","target","blur","value","Navigation","NotFound","API_BASE_URL","API_END_CREDENTIALS","useWeather","useEffect","a","query","fetch","cityResponse","json","cityJson","coord","lat","lon","response","result","weatherData","Object","assign","console","error","fetchWeather","App","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43988b3.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst WeatherContext = createContext([]);\r\n\r\nexport default WeatherContext;\r\n","export const weatherIcon = (code) => {\r\n  return `http://openweathermap.org/img/wn/${code}@2x.png`;\r\n};\r\n\r\n/**\r\n *\r\n * @param {Date} date\r\n * @returns {string}\r\n */\r\nexport const getDateName = (date) => {\r\n  if (!date) return;\r\n  const weekDay = date.getDay();\r\n  switch (weekDay) {\r\n    case 1:\r\n      return 'Monday';\r\n    case 2:\r\n      return 'Tuesday';\r\n    case 3:\r\n      return 'Wednesday';\r\n    case 4:\r\n      return 'Thursday';\r\n    case 5:\r\n      return 'Friday';\r\n    case 6:\r\n      return 'Saturday';\r\n    default:\r\n      return 'Sunday';\r\n  }\r\n};\r\n\r\nexport const toShortTimeString = (date) => {\r\n  const parts = date.toLocaleTimeString('sv-SE').split(':');\r\n\r\n  return `${parts[0]}:${parts[1]}`;\r\n};\r\n\r\nexport const getDateFromUnixTS = (uts) => {\r\n  return new Date(uts * 1000);\r\n};\r\n","import { weatherIcon, getDateFromUnixTS } from '../../global';\r\n\r\nconst ForecastHour = ({ data }) => {\r\n  return (\r\n    <tr>\r\n      <td className='text-center'>{getDateFromUnixTS(data.dt).getHours()}</td>\r\n      <td className='align-items-center text-center'>\r\n        <div className='d-flex align-items-center justify-content-center'>\r\n          <img\r\n            className='table-weather-icon'\r\n            src={weatherIcon(data.weather[0].icon)}\r\n            alt={data.weather[0].description}\r\n          />{' '}\r\n          {Math.round(data.temp)}°\r\n        </div>\r\n      </td>\r\n      <td className='text-center'>{Math.round(data.feels_like)}°</td>\r\n      <td className='text-center'>\r\n        {parseFloat(data.rain ? data.rain['1h'] : 0).toFixed(1)}\r\n      </td>\r\n      <td className='text-center'>{data.humidity}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ForecastHour;\r\n","import {\r\n  weatherIcon,\r\n  getDateName,\r\n  toShortTimeString,\r\n  getDateFromUnixTS,\r\n} from '../../global';\r\nimport {\r\n  ThermometerHalf,\r\n  Umbrella,\r\n  Wind,\r\n  BrightnessAltHigh,\r\n} from 'react-bootstrap-icons';\r\nimport ForecastHour from './ForecastHour';\r\nimport { useState } from 'react';\r\n\r\nconst Forecast = ({ data, hours }) => {\r\n  const timestamp = data.dt;\r\n  const date = getDateFromUnixTS(timestamp);\r\n  const dateParts = date.toString().split(' ');\r\n\r\n  const [showHours, setShowHours] = useState(false);\r\n  const onClick = () => {\r\n    setShowHours(!showHours);\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        className='row mt-3 shadow forecast-card fs-5 cursor-pointer'\r\n        onClick={onClick}\r\n      >\r\n        <div className='col-12 d-md-none d-flex justify-content-start align-items-baseline border-bottom py-2'>\r\n          <label className='pe-2 fs-5 fw-bold'>{getDateName(date)}</label>\r\n          <span>\r\n            {dateParts[2]} {dateParts[1]}\r\n          </span>\r\n        </div>\r\n\r\n        <div className='col-2 col-md-4 col-lg-3 d-flex justify-content-start align-items-center border-md-end'>\r\n          <img\r\n            src={weatherIcon(data.weather[0].icon)}\r\n            className='weather-icon me-3'\r\n            alt={data.weather[0].description}\r\n          />\r\n          <div className='d-none d-md-block'>\r\n            <h4>{getDateName(date)}</h4>\r\n            <span>\r\n              {dateParts[2]} {dateParts[1]}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='col-10 col-md-8 col-lg-9 d-flex justify-content-around align-items-start py-3'>\r\n          <div className='d-flex justify-content-start align-items-start'>\r\n            <div className='me-2 d-none d-md-block'>{<ThermometerHalf />}</div>\r\n            <div className='d-flex flex-column'>\r\n              <span className='fw-md-bold'>{Math.round(data.temp.max)}°</span>\r\n              <span className=''>{Math.round(data.temp.min)}°</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='d-none d-md-flex justify-content-start align-items-start'>\r\n            <div className='me-2'>{<Umbrella />}</div>\r\n            <div className='d-flex flex-column'>\r\n              <span className='fw-md-bold'>\r\n                {parseFloat(data.rain || 0).toFixed(1)} mm\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='d-none d-md-flex justify-content-start align-items-start'>\r\n            <div className='me-2'>{<Wind />}</div>\r\n            <div className='d-flex flex-column'>\r\n              <span className='fw-md-bold'>\r\n                {Math.ceil(data.wind_speed)} m/s\r\n              </span>\r\n              <span className=''>{Math.ceil(data.wind_gust)} m/s</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='d-flex d-md-none flex-column'>\r\n            <div className='d-flex justify-content-start align-items-start'>\r\n              <div className='me-2'>{<Umbrella />}</div>\r\n              <div className='d-flex flex-column'>\r\n                <span className='fw-md-bold'>\r\n                  {parseFloat(data.rain || 0).toFixed(1)} mm\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className='d-flex justify-content-start align-items-start'>\r\n              <div className='me-2'>{<Wind />}</div>\r\n              <div className='d-flex flex-column'>\r\n                <span className='fw-md-bold'>\r\n                  {Math.ceil(data.wind_speed)} ({Math.ceil(data.wind_gust)}) m/s\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='d-flex justify-content-start align-items-start'>\r\n            <div className='me-2'>{<BrightnessAltHigh />}</div>\r\n            <div className='d-flex flex-column'>\r\n              <span className='fw-md-bold'>\r\n                {toShortTimeString(getDateFromUnixTS(data.sunrise))}\r\n              </span>\r\n              <span className=''>\r\n                {toShortTimeString(getDateFromUnixTS(data.sunset))}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showHours && (\r\n        <table className='table table-light table-striped table-responsive mt-2 shadow'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col' className='text-center'>\r\n                Time\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Weather\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Feels like\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Precipiation mm\r\n              </th>\r\n              <th scope='col' className='text-center'>\r\n                Humidity\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {hours.length > 0 ? (\r\n              hours.map((hour) => <ForecastHour key={hour.dt} data={hour} />)\r\n            ) : (\r\n              <tr>\r\n                <td colSpan='5' className='ps-3'>\r\n                  No available data\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;\r\n","import { useContext } from 'react';\r\nimport WeatherContext from '../../context/weatherContext';\r\nimport Forecast from './Forecast';\r\nimport { getDateFromUnixTS } from '../../global';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ForecastContainer = ({ showWeek }) => {\r\n  const { weather } = useContext(WeatherContext);\r\n  const history = useHistory();\r\n  const showForecast = () => {\r\n    history.push('/forecast');\r\n  };\r\n  return (\r\n    <div>\r\n      {weather.daily ? (\r\n        <div>\r\n          <div className='row d-none d-md-flex'>\r\n            <div className='col-md-3'></div>\r\n            <div className='col-md-9 d-flex justify-content-around align-items-start'>\r\n              <span>Temperature</span>\r\n              <span>Precipitation per day</span>\r\n              <span>Wind / gust</span>\r\n              <span>Sunrise / sunset</span>\r\n            </div>\r\n          </div>\r\n          {weather.daily.slice(0, showWeek ? 7 : 3).map((day) => (\r\n            <Forecast\r\n              key={day.dt}\r\n              data={day}\r\n              hours={weather.hourly.filter(\r\n                (x) =>\r\n                  getDateFromUnixTS(x.dt).getDate() ===\r\n                  getDateFromUnixTS(day.dt).getDate()\r\n              )}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>Nothing to display</div>\r\n      )}\r\n      <div className='pt-3'>\r\n        <p className='link-primary cursor-pointer' onClick={showForecast}>\r\n          {!showWeek && 'Show 7 day forecast'}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastContainer;\r\n","import { useContext } from 'react';\r\nimport WeatherContext from '../context/weatherContext';\r\n\r\nconst Header = () => {\r\n  const { weather, setWeather } = useContext(WeatherContext);\r\n  const onKeyPress = (e) => {\r\n    if (e.charCode === 13) {\r\n      e.target.blur();\r\n      setWeather({ city: e.target.value });\r\n    }\r\n  };\r\n  return (\r\n    <div className='row py-3'>\r\n      <div className='col-12 col-md-6'>\r\n        <h2 className='text-capitalize'>{weather.city}</h2>\r\n      </div>\r\n      <div className='col-12 col-md-6 d-md-flex justify-content-md-end'>\r\n        <input\r\n          className='form-control'\r\n          placeholder='Search'\r\n          onKeyPress={onKeyPress}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useHistory } from 'react-router';\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n  const onClick = () => {\r\n    history.push('/weather-app');\r\n  };\r\n  return (\r\n    <nav className='navbar navbar-dark bg-dark'>\r\n      <div className='container'>\r\n        <div className='navbar-brand cursor-pointer' onClick={onClick}>\r\n          JMHI\r\n        </div>\r\n        <div className='mx-auto text-muted d-none d-md-block'>\r\n          Jockes meteorological and hydrological institute\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","const NotFound = () => (\r\n  <div>\r\n    <h1>Oops! Page not found!</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst API_BASE_URL = 'https://api.openweathermap.org/data/2.5/';\r\nconst API_END_CREDENTIALS =\r\n  '&units=metric&appid=be2fb2fb9f1886110a24b46d6a9e9303';\r\n\r\nconst useWeather = () => {\r\n  const [weather, setWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        let query = weather.city || 'Stockholm';\r\n        const cityResponse = await fetch(\r\n          `${API_BASE_URL}weather?q=${query}${API_END_CREDENTIALS}`\r\n        );\r\n        const cityJson = await cityResponse.json();\r\n\r\n        const response = await fetch(\r\n          `${API_BASE_URL}onecall?lat=${cityJson.coord.lat}&lon=${cityJson.coord.lon}${API_END_CREDENTIALS}`\r\n        );\r\n        let result = await response.json();\r\n\r\n        const weatherData = Object.assign(result, { city: query });\r\n        setWeather(weatherData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchWeather();\r\n  }, [weather.city]);\r\n\r\n  return { weather, setWeather };\r\n};\r\n\r\nexport default useWeather;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport ForecastContainer from './containers/forecast/ForecastContainer';\nimport Header from './containers/Header';\nimport Navigation from './containers/Navigation';\nimport NotFound from './containers/NotFound';\nimport WeatherContext from './context/weatherContext';\nimport useWeather from './hooks/useWeather';\n\nfunction App() {\n  const weather = useWeather();\n  return (\n    <div className='App'>\n      <Router>\n        <Navigation />\n        <div className='container'>\n          <WeatherContext.Provider value={weather}>\n            <Header />\n            <Switch>\n              <Route exact path='/'>\n                <ForecastContainer />\n              </Route>\n              <Route path={['/home', '/weather-app']}>\n                <ForecastContainer />\n              </Route>\n              <Route path='/forecast'>\n                <ForecastContainer showWeek={true} />\n              </Route>\n              <NotFound />\n            </Switch>\n          </WeatherContext.Provider>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}